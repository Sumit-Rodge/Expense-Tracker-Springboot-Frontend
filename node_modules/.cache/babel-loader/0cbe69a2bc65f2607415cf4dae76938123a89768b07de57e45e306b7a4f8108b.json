{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.commandDocument = exports.ServiceWorkflow = void 0;\nconst bson_1 = require(\"bson\");\nconst utils_1 = require(\"../../../utils\");\nconst providers_1 = require(\"../providers\");\n/**\r\n * Common behaviour for OIDC device workflows.\r\n * @internal\r\n */\nclass ServiceWorkflow {\n  /**\r\n   * Execute the workflow. Looks for AWS_WEB_IDENTITY_TOKEN_FILE in the environment\r\n   * and then attempts to read the token from that path.\r\n   */\n  async execute(connection, credentials) {\n    const token = await this.getToken(credentials);\n    const command = commandDocument(token);\n    return connection.command((0, utils_1.ns)(credentials.source), command, undefined);\n  }\n  /**\r\n   * Get the document to add for speculative authentication.\r\n   */\n  async speculativeAuth(credentials) {\n    const token = await this.getToken(credentials);\n    const document = commandDocument(token);\n    document.db = credentials.source;\n    return {\n      speculativeAuthenticate: document\n    };\n  }\n}\nexports.ServiceWorkflow = ServiceWorkflow;\n/**\r\n * Create the saslStart command document.\r\n */\nfunction commandDocument(token) {\n  return {\n    saslStart: 1,\n    mechanism: providers_1.AuthMechanism.MONGODB_OIDC,\n    payload: bson_1.BSON.serialize({\n      jwt: token\n    })\n  };\n}\nexports.commandDocument = commandDocument;","map":{"version":3,"names":["bson_1","require","utils_1","providers_1","ServiceWorkflow","execute","connection","credentials","token","getToken","command","commandDocument","ns","source","undefined","speculativeAuth","document","db","speculativeAuthenticate","exports","saslStart","mechanism","AuthMechanism","MONGODB_OIDC","payload","BSON","serialize","jwt"],"sources":["C:\\Users\\sumit\\Desktop\\Final project\\Expense-Tracker-Springboot-Frontend\\node_modules\\mongodb\\src\\cmap\\auth\\mongodb_oidc\\service_workflow.ts"],"sourcesContent":["import { BSON, type Document } from 'bson';\r\n\r\nimport { ns } from '../../../utils';\r\nimport type { Connection } from '../../connection';\r\nimport type { MongoCredentials } from '../mongo_credentials';\r\nimport type { Workflow } from '../mongodb_oidc';\r\nimport { AuthMechanism } from '../providers';\r\n\r\n/**\r\n * Common behaviour for OIDC device workflows.\r\n * @internal\r\n */\r\nexport abstract class ServiceWorkflow implements Workflow {\r\n  /**\r\n   * Execute the workflow. Looks for AWS_WEB_IDENTITY_TOKEN_FILE in the environment\r\n   * and then attempts to read the token from that path.\r\n   */\r\n  async execute(connection: Connection, credentials: MongoCredentials): Promise<Document> {\r\n    const token = await this.getToken(credentials);\r\n    const command = commandDocument(token);\r\n    return connection.command(ns(credentials.source), command, undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the document to add for speculative authentication.\r\n   */\r\n  async speculativeAuth(credentials: MongoCredentials): Promise<Document> {\r\n    const token = await this.getToken(credentials);\r\n    const document = commandDocument(token);\r\n    document.db = credentials.source;\r\n    return { speculativeAuthenticate: document };\r\n  }\r\n\r\n  /**\r\n   * Get the token from the environment or endpoint.\r\n   */\r\n  abstract getToken(credentials: MongoCredentials): Promise<string>;\r\n}\r\n\r\n/**\r\n * Create the saslStart command document.\r\n */\r\nexport function commandDocument(token: string): Document {\r\n  return {\r\n    saslStart: 1,\r\n    mechanism: AuthMechanism.MONGODB_OIDC,\r\n    payload: BSON.serialize({ jwt: token })\r\n  };\r\n}\r\n"],"mappings":";;;;;;AAAA,MAAAA,MAAA,GAAAC,OAAA;AAEA,MAAAC,OAAA,GAAAD,OAAA;AAIA,MAAAE,WAAA,GAAAF,OAAA;AAEA;;;;AAIA,MAAsBG,eAAe;EACnC;;;;EAIA,MAAMC,OAAOA,CAACC,UAAsB,EAAEC,WAA6B;IACjE,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACC,QAAQ,CAACF,WAAW,CAAC;IAC9C,MAAMG,OAAO,GAAGC,eAAe,CAACH,KAAK,CAAC;IACtC,OAAOF,UAAU,CAACI,OAAO,CAAC,IAAAR,OAAA,CAAAU,EAAE,EAACL,WAAW,CAACM,MAAM,CAAC,EAAEH,OAAO,EAAEI,SAAS,CAAC;EACvE;EAEA;;;EAGA,MAAMC,eAAeA,CAACR,WAA6B;IACjD,MAAMC,KAAK,GAAG,MAAM,IAAI,CAACC,QAAQ,CAACF,WAAW,CAAC;IAC9C,MAAMS,QAAQ,GAAGL,eAAe,CAACH,KAAK,CAAC;IACvCQ,QAAQ,CAACC,EAAE,GAAGV,WAAW,CAACM,MAAM;IAChC,OAAO;MAAEK,uBAAuB,EAAEF;IAAQ,CAAE;EAC9C;;AAnBFG,OAAA,CAAAf,eAAA,GAAAA,eAAA;AA2BA;;;AAGA,SAAgBO,eAAeA,CAACH,KAAa;EAC3C,OAAO;IACLY,SAAS,EAAE,CAAC;IACZC,SAAS,EAAElB,WAAA,CAAAmB,aAAa,CAACC,YAAY;IACrCC,OAAO,EAAExB,MAAA,CAAAyB,IAAI,CAACC,SAAS,CAAC;MAAEC,GAAG,EAAEnB;IAAK,CAAE;GACvC;AACH;AANAW,OAAA,CAAAR,eAAA,GAAAA,eAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}