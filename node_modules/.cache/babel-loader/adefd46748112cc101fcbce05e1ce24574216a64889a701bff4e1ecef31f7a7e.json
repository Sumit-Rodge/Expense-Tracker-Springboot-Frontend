{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RenameOperation = void 0;\nconst collection_1 = require(\"../collection\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass RenameOperation extends command_1.CommandOperation {\n  constructor(collection, newName, options) {\n    super(collection, options);\n    this.collection = collection;\n    this.newName = newName;\n    this.options = options;\n    this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n  }\n  get commandName() {\n    return 'renameCollection';\n  }\n  async execute(server, session) {\n    // Build the command\n    const renameCollection = this.collection.namespace;\n    const toCollection = this.collection.s.namespace.withCollection(this.newName).toString();\n    const dropTarget = typeof this.options.dropTarget === 'boolean' ? this.options.dropTarget : false;\n    const command = {\n      renameCollection: renameCollection,\n      to: toCollection,\n      dropTarget: dropTarget\n    };\n    await super.executeCommand(server, session, command);\n    return new collection_1.Collection(this.collection.s.db, this.newName, this.collection.s.options);\n  }\n}\nexports.RenameOperation = RenameOperation;\n(0, operation_1.defineAspects)(RenameOperation, [operation_1.Aspect.WRITE_OPERATION]);","map":{"version":3,"names":["collection_1","require","utils_1","command_1","operation_1","RenameOperation","CommandOperation","constructor","collection","newName","options","ns","MongoDBNamespace","commandName","execute","server","session","renameCollection","namespace","toCollection","s","withCollection","toString","dropTarget","command","to","executeCommand","Collection","db","exports","defineAspects","Aspect","WRITE_OPERATION"],"sources":["C:\\Users\\sumit\\Desktop\\Final project\\Expense-Tracker-Springboot-Frontend\\node_modules\\mongodb\\src\\operations\\rename.ts"],"sourcesContent":["import type { Document } from '../bson';\r\nimport { Collection } from '../collection';\r\nimport type { Server } from '../sdam/server';\r\nimport type { ClientSession } from '../sessions';\r\nimport { MongoDBNamespace } from '../utils';\r\nimport { CommandOperation, type CommandOperationOptions } from './command';\r\nimport { Aspect, defineAspects } from './operation';\r\n\r\n/** @public */\r\nexport interface RenameOptions extends CommandOperationOptions {\r\n  /** Drop the target name collection if it previously exists. */\r\n  dropTarget?: boolean;\r\n  /** Unclear */\r\n  new_collection?: boolean;\r\n}\r\n\r\n/** @internal */\r\nexport class RenameOperation extends CommandOperation<Document> {\r\n  constructor(\r\n    public collection: Collection,\r\n    public newName: string,\r\n    public override options: RenameOptions\r\n  ) {\r\n    super(collection, options);\r\n    this.ns = new MongoDBNamespace('admin', '$cmd');\r\n  }\r\n\r\n  override get commandName(): string {\r\n    return 'renameCollection' as const;\r\n  }\r\n\r\n  override async execute(server: Server, session: ClientSession | undefined): Promise<Collection> {\r\n    // Build the command\r\n    const renameCollection = this.collection.namespace;\r\n    const toCollection = this.collection.s.namespace.withCollection(this.newName).toString();\r\n    const dropTarget =\r\n      typeof this.options.dropTarget === 'boolean' ? this.options.dropTarget : false;\r\n\r\n    const command = {\r\n      renameCollection: renameCollection,\r\n      to: toCollection,\r\n      dropTarget: dropTarget\r\n    };\r\n\r\n    await super.executeCommand(server, session, command);\r\n    return new Collection(this.collection.s.db, this.newName, this.collection.s.options);\r\n  }\r\n}\r\n\r\ndefineAspects(RenameOperation, [Aspect.WRITE_OPERATION]);\r\n"],"mappings":";;;;;;AACA,MAAAA,YAAA,GAAAC,OAAA;AAGA,MAAAC,OAAA,GAAAD,OAAA;AACA,MAAAE,SAAA,GAAAF,OAAA;AACA,MAAAG,WAAA,GAAAH,OAAA;AAUA;AACA,MAAaI,eAAgB,SAAQF,SAAA,CAAAG,gBAA0B;EAC7DC,YACSC,UAAsB,EACtBC,OAAe,EACNC,OAAsB;IAEtC,KAAK,CAACF,UAAU,EAAEE,OAAO,CAAC;IAJnB,KAAAF,UAAU,GAAVA,UAAU;IACV,KAAAC,OAAO,GAAPA,OAAO;IACE,KAAAC,OAAO,GAAPA,OAAO;IAGvB,IAAI,CAACC,EAAE,GAAG,IAAIT,OAAA,CAAAU,gBAAgB,CAAC,OAAO,EAAE,MAAM,CAAC;EACjD;EAEA,IAAaC,WAAWA,CAAA;IACtB,OAAO,kBAA2B;EACpC;EAES,MAAMC,OAAOA,CAACC,MAAc,EAAEC,OAAkC;IACvE;IACA,MAAMC,gBAAgB,GAAG,IAAI,CAACT,UAAU,CAACU,SAAS;IAClD,MAAMC,YAAY,GAAG,IAAI,CAACX,UAAU,CAACY,CAAC,CAACF,SAAS,CAACG,cAAc,CAAC,IAAI,CAACZ,OAAO,CAAC,CAACa,QAAQ,EAAE;IACxF,MAAMC,UAAU,GACd,OAAO,IAAI,CAACb,OAAO,CAACa,UAAU,KAAK,SAAS,GAAG,IAAI,CAACb,OAAO,CAACa,UAAU,GAAG,KAAK;IAEhF,MAAMC,OAAO,GAAG;MACdP,gBAAgB,EAAEA,gBAAgB;MAClCQ,EAAE,EAAEN,YAAY;MAChBI,UAAU,EAAEA;KACb;IAED,MAAM,KAAK,CAACG,cAAc,CAACX,MAAM,EAAEC,OAAO,EAAEQ,OAAO,CAAC;IACpD,OAAO,IAAIxB,YAAA,CAAA2B,UAAU,CAAC,IAAI,CAACnB,UAAU,CAACY,CAAC,CAACQ,EAAE,EAAE,IAAI,CAACnB,OAAO,EAAE,IAAI,CAACD,UAAU,CAACY,CAAC,CAACV,OAAO,CAAC;EACtF;;AA7BFmB,OAAA,CAAAxB,eAAA,GAAAA,eAAA;AAgCA,IAAAD,WAAA,CAAA0B,aAAa,EAACzB,eAAe,EAAE,CAACD,WAAA,CAAA2B,MAAM,CAACC,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}