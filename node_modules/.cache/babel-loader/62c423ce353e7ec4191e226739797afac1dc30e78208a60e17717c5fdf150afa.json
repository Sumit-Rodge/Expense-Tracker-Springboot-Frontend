{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MongoCryptKMSRequestNetworkTimeoutError = exports.MongoCryptAzureKMSRequestError = exports.MongoCryptCreateEncryptedCollectionError = exports.MongoCryptCreateDataKeyError = exports.MongoCryptInvalidArgumentError = exports.MongoCryptError = void 0;\nconst error_1 = require(\"../error\");\n/**\r\n * @public\r\n * An error indicating that something went wrong specifically with MongoDB Client Encryption\r\n */\nclass MongoCryptError extends error_1.MongoError {\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\n  constructor(message, options = {}) {\n    super(message, options);\n  }\n  get name() {\n    return 'MongoCryptError';\n  }\n}\nexports.MongoCryptError = MongoCryptError;\n/**\r\n * @public\r\n *\r\n * An error indicating an invalid argument was provided to an encryption API.\r\n */\nclass MongoCryptInvalidArgumentError extends MongoCryptError {\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\n  constructor(message) {\n    super(message);\n  }\n  get name() {\n    return 'MongoCryptInvalidArgumentError';\n  }\n}\nexports.MongoCryptInvalidArgumentError = MongoCryptInvalidArgumentError;\n/**\r\n * @public\r\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys\r\n */\nclass MongoCryptCreateDataKeyError extends MongoCryptError {\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\n  constructor(encryptedFields, {\n    cause\n  }) {\n    super(`Unable to complete creating data keys: ${cause.message}`, {\n      cause\n    });\n    this.encryptedFields = encryptedFields;\n  }\n  get name() {\n    return 'MongoCryptCreateDataKeyError';\n  }\n}\nexports.MongoCryptCreateDataKeyError = MongoCryptCreateDataKeyError;\n/**\r\n * @public\r\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection\r\n */\nclass MongoCryptCreateEncryptedCollectionError extends MongoCryptError {\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\n  constructor(encryptedFields, {\n    cause\n  }) {\n    super(`Unable to create collection: ${cause.message}`, {\n      cause\n    });\n    this.encryptedFields = encryptedFields;\n  }\n  get name() {\n    return 'MongoCryptCreateEncryptedCollectionError';\n  }\n}\nexports.MongoCryptCreateEncryptedCollectionError = MongoCryptCreateEncryptedCollectionError;\n/**\r\n * @public\r\n * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.\r\n */\nclass MongoCryptAzureKMSRequestError extends MongoCryptError {\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\n  constructor(message, body) {\n    super(message);\n    this.body = body;\n  }\n  get name() {\n    return 'MongoCryptAzureKMSRequestError';\n  }\n}\nexports.MongoCryptAzureKMSRequestError = MongoCryptAzureKMSRequestError;\n/** @public */\nclass MongoCryptKMSRequestNetworkTimeoutError extends MongoCryptError {\n  get name() {\n    return 'MongoCryptKMSRequestNetworkTimeoutError';\n  }\n}\nexports.MongoCryptKMSRequestNetworkTimeoutError = MongoCryptKMSRequestNetworkTimeoutError;","map":{"version":3,"names":["error_1","require","MongoCryptError","MongoError","constructor","message","options","name","exports","MongoCryptInvalidArgumentError","MongoCryptCreateDataKeyError","encryptedFields","cause","MongoCryptCreateEncryptedCollectionError","MongoCryptAzureKMSRequestError","body","MongoCryptKMSRequestNetworkTimeoutError"],"sources":["C:\\Users\\sumit\\Desktop\\Final project\\Expense-Tracker-Springboot-Frontend\\node_modules\\mongodb\\src\\client-side-encryption\\errors.ts"],"sourcesContent":["import { type Document } from '../bson';\r\nimport { MongoError } from '../error';\r\n\r\n/**\r\n * @public\r\n * An error indicating that something went wrong specifically with MongoDB Client Encryption\r\n */\r\nexport class MongoCryptError extends MongoError {\r\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\r\n  constructor(message: string, options: { cause?: Error } = {}) {\r\n    super(message, options);\r\n  }\r\n\r\n  override get name() {\r\n    return 'MongoCryptError';\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n *\r\n * An error indicating an invalid argument was provided to an encryption API.\r\n */\r\nexport class MongoCryptInvalidArgumentError extends MongoCryptError {\r\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\r\n  constructor(message: string) {\r\n    super(message);\r\n  }\r\n\r\n  override get name() {\r\n    return 'MongoCryptInvalidArgumentError';\r\n  }\r\n}\r\n/**\r\n * @public\r\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create data keys\r\n */\r\nexport class MongoCryptCreateDataKeyError extends MongoCryptError {\r\n  encryptedFields: Document;\r\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\r\n  constructor(encryptedFields: Document, { cause }: { cause: Error }) {\r\n    super(`Unable to complete creating data keys: ${cause.message}`, { cause });\r\n    this.encryptedFields = encryptedFields;\r\n  }\r\n\r\n  override get name() {\r\n    return 'MongoCryptCreateDataKeyError';\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n * An error indicating that `ClientEncryption.createEncryptedCollection()` failed to create a collection\r\n */\r\nexport class MongoCryptCreateEncryptedCollectionError extends MongoCryptError {\r\n  encryptedFields: Document;\r\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\r\n  constructor(encryptedFields: Document, { cause }: { cause: Error }) {\r\n    super(`Unable to create collection: ${cause.message}`, { cause });\r\n    this.encryptedFields = encryptedFields;\r\n  }\r\n\r\n  override get name() {\r\n    return 'MongoCryptCreateEncryptedCollectionError';\r\n  }\r\n}\r\n\r\n/**\r\n * @public\r\n * An error indicating that mongodb-client-encryption failed to auto-refresh Azure KMS credentials.\r\n */\r\nexport class MongoCryptAzureKMSRequestError extends MongoCryptError {\r\n  /** The body of the http response that failed, if present. */\r\n  body?: Document;\r\n  /**\r\n   * **Do not use this constructor!**\r\n   *\r\n   * Meant for internal use only.\r\n   *\r\n   * @remarks\r\n   * This class is only meant to be constructed within the driver. This constructor is\r\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\r\n   *\r\n   * @public\r\n   **/\r\n  constructor(message: string, body?: Document) {\r\n    super(message);\r\n    this.body = body;\r\n  }\r\n\r\n  override get name(): string {\r\n    return 'MongoCryptAzureKMSRequestError';\r\n  }\r\n}\r\n\r\n/** @public */\r\nexport class MongoCryptKMSRequestNetworkTimeoutError extends MongoCryptError {\r\n  override get name(): string {\r\n    return 'MongoCryptKMSRequestNetworkTimeoutError';\r\n  }\r\n}\r\n"],"mappings":";;;;;;AACA,MAAAA,OAAA,GAAAC,OAAA;AAEA;;;;AAIA,MAAaC,eAAgB,SAAQF,OAAA,CAAAG,UAAU;EAC7C;;;;;;;;;;;EAWAC,YAAYC,OAAe,EAAEC,OAAA,GAA6B,EAAE;IAC1D,KAAK,CAACD,OAAO,EAAEC,OAAO,CAAC;EACzB;EAEA,IAAaC,IAAIA,CAAA;IACf,OAAO,iBAAiB;EAC1B;;AAlBFC,OAAA,CAAAN,eAAA,GAAAA,eAAA;AAqBA;;;;;AAKA,MAAaO,8BAA+B,SAAQP,eAAe;EACjE;;;;;;;;;;;EAWAE,YAAYC,OAAe;IACzB,KAAK,CAACA,OAAO,CAAC;EAChB;EAEA,IAAaE,IAAIA,CAAA;IACf,OAAO,gCAAgC;EACzC;;AAlBFC,OAAA,CAAAC,8BAAA,GAAAA,8BAAA;AAoBA;;;;AAIA,MAAaC,4BAA6B,SAAQR,eAAe;EAE/D;;;;;;;;;;;EAWAE,YAAYO,eAAyB,EAAE;IAAEC;EAAK,CAAoB;IAChE,KAAK,CAAC,0CAA0CA,KAAK,CAACP,OAAO,EAAE,EAAE;MAAEO;IAAK,CAAE,CAAC;IAC3E,IAAI,CAACD,eAAe,GAAGA,eAAe;EACxC;EAEA,IAAaJ,IAAIA,CAAA;IACf,OAAO,8BAA8B;EACvC;;AApBFC,OAAA,CAAAE,4BAAA,GAAAA,4BAAA;AAuBA;;;;AAIA,MAAaG,wCAAyC,SAAQX,eAAe;EAE3E;;;;;;;;;;;EAWAE,YAAYO,eAAyB,EAAE;IAAEC;EAAK,CAAoB;IAChE,KAAK,CAAC,gCAAgCA,KAAK,CAACP,OAAO,EAAE,EAAE;MAAEO;IAAK,CAAE,CAAC;IACjE,IAAI,CAACD,eAAe,GAAGA,eAAe;EACxC;EAEA,IAAaJ,IAAIA,CAAA;IACf,OAAO,0CAA0C;EACnD;;AApBFC,OAAA,CAAAK,wCAAA,GAAAA,wCAAA;AAuBA;;;;AAIA,MAAaC,8BAA+B,SAAQZ,eAAe;EAGjE;;;;;;;;;;;EAWAE,YAAYC,OAAe,EAAEU,IAAe;IAC1C,KAAK,CAACV,OAAO,CAAC;IACd,IAAI,CAACU,IAAI,GAAGA,IAAI;EAClB;EAEA,IAAaR,IAAIA,CAAA;IACf,OAAO,gCAAgC;EACzC;;AArBFC,OAAA,CAAAM,8BAAA,GAAAA,8BAAA;AAwBA;AACA,MAAaE,uCAAwC,SAAQd,eAAe;EAC1E,IAAaK,IAAIA,CAAA;IACf,OAAO,yCAAyC;EAClD;;AAHFC,OAAA,CAAAQ,uCAAA,GAAAA,uCAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}